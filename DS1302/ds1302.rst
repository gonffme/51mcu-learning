                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ds1302
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __nop
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 	.globl _Ds1302Write_PARM_2
                                    109 	.globl _TIME
                                    110 	.globl _WRITE_RTC_ADDR
                                    111 	.globl _READ_RTC_ADDR
                                    112 	.globl _Ds1302GW
                                    113 	.globl _Ds1302Write
                                    114 	.globl _Ds1302Init
                                    115 	.globl _Ds1302GR
                                    116 	.globl _Ds1302Read
                                    117 	.globl _Ds1302ReadTime
                                    118 ;--------------------------------------------------------
                                    119 ; special function registers
                                    120 ;--------------------------------------------------------
                                    121 	.area RSEG    (ABS,DATA)
      000000                        122 	.org 0x0000
                           000080   123 _P0	=	0x0080
                           000081   124 _SP	=	0x0081
                           000082   125 _DPL	=	0x0082
                           000083   126 _DPH	=	0x0083
                           000087   127 _PCON	=	0x0087
                           000088   128 _TCON	=	0x0088
                           000089   129 _TMOD	=	0x0089
                           00008A   130 _TL0	=	0x008a
                           00008B   131 _TL1	=	0x008b
                           00008C   132 _TH0	=	0x008c
                           00008D   133 _TH1	=	0x008d
                           000090   134 _P1	=	0x0090
                           000098   135 _SCON	=	0x0098
                           000099   136 _SBUF	=	0x0099
                           0000A0   137 _P2	=	0x00a0
                           0000A8   138 _IE	=	0x00a8
                           0000B0   139 _P3	=	0x00b0
                           0000B8   140 _IP	=	0x00b8
                           0000D0   141 _PSW	=	0x00d0
                           0000E0   142 _ACC	=	0x00e0
                           0000F0   143 _B	=	0x00f0
                                    144 ;--------------------------------------------------------
                                    145 ; special function bits
                                    146 ;--------------------------------------------------------
                                    147 	.area RSEG    (ABS,DATA)
      000000                        148 	.org 0x0000
                           000080   149 _P0_0	=	0x0080
                           000081   150 _P0_1	=	0x0081
                           000082   151 _P0_2	=	0x0082
                           000083   152 _P0_3	=	0x0083
                           000084   153 _P0_4	=	0x0084
                           000085   154 _P0_5	=	0x0085
                           000086   155 _P0_6	=	0x0086
                           000087   156 _P0_7	=	0x0087
                           000088   157 _IT0	=	0x0088
                           000089   158 _IE0	=	0x0089
                           00008A   159 _IT1	=	0x008a
                           00008B   160 _IE1	=	0x008b
                           00008C   161 _TR0	=	0x008c
                           00008D   162 _TF0	=	0x008d
                           00008E   163 _TR1	=	0x008e
                           00008F   164 _TF1	=	0x008f
                           000090   165 _P1_0	=	0x0090
                           000091   166 _P1_1	=	0x0091
                           000092   167 _P1_2	=	0x0092
                           000093   168 _P1_3	=	0x0093
                           000094   169 _P1_4	=	0x0094
                           000095   170 _P1_5	=	0x0095
                           000096   171 _P1_6	=	0x0096
                           000097   172 _P1_7	=	0x0097
                           000098   173 _RI	=	0x0098
                           000099   174 _TI	=	0x0099
                           00009A   175 _RB8	=	0x009a
                           00009B   176 _TB8	=	0x009b
                           00009C   177 _REN	=	0x009c
                           00009D   178 _SM2	=	0x009d
                           00009E   179 _SM1	=	0x009e
                           00009F   180 _SM0	=	0x009f
                           0000A0   181 _P2_0	=	0x00a0
                           0000A1   182 _P2_1	=	0x00a1
                           0000A2   183 _P2_2	=	0x00a2
                           0000A3   184 _P2_3	=	0x00a3
                           0000A4   185 _P2_4	=	0x00a4
                           0000A5   186 _P2_5	=	0x00a5
                           0000A6   187 _P2_6	=	0x00a6
                           0000A7   188 _P2_7	=	0x00a7
                           0000A8   189 _EX0	=	0x00a8
                           0000A9   190 _ET0	=	0x00a9
                           0000AA   191 _EX1	=	0x00aa
                           0000AB   192 _ET1	=	0x00ab
                           0000AC   193 _ES	=	0x00ac
                           0000AF   194 _EA	=	0x00af
                           0000B0   195 _P3_0	=	0x00b0
                           0000B1   196 _P3_1	=	0x00b1
                           0000B2   197 _P3_2	=	0x00b2
                           0000B3   198 _P3_3	=	0x00b3
                           0000B4   199 _P3_4	=	0x00b4
                           0000B5   200 _P3_5	=	0x00b5
                           0000B6   201 _P3_6	=	0x00b6
                           0000B7   202 _P3_7	=	0x00b7
                           0000B0   203 _RXD	=	0x00b0
                           0000B1   204 _TXD	=	0x00b1
                           0000B2   205 _INT0	=	0x00b2
                           0000B3   206 _INT1	=	0x00b3
                           0000B4   207 _T0	=	0x00b4
                           0000B5   208 _T1	=	0x00b5
                           0000B6   209 _WR	=	0x00b6
                           0000B7   210 _RD	=	0x00b7
                           0000B8   211 _PX0	=	0x00b8
                           0000B9   212 _PT0	=	0x00b9
                           0000BA   213 _PX1	=	0x00ba
                           0000BB   214 _PT1	=	0x00bb
                           0000BC   215 _PS	=	0x00bc
                           0000D0   216 _P	=	0x00d0
                           0000D1   217 _F1	=	0x00d1
                           0000D2   218 _OV	=	0x00d2
                           0000D3   219 _RS0	=	0x00d3
                           0000D4   220 _RS1	=	0x00d4
                           0000D5   221 _F0	=	0x00d5
                           0000D6   222 _AC	=	0x00d6
                           0000D7   223 _CY	=	0x00d7
                                    224 ;--------------------------------------------------------
                                    225 ; overlayable register banks
                                    226 ;--------------------------------------------------------
                                    227 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        228 	.ds 8
                                    229 ;--------------------------------------------------------
                                    230 ; internal ram data
                                    231 ;--------------------------------------------------------
                                    232 	.area DSEG    (DATA)
      000020                        233 _READ_RTC_ADDR::
      000020                        234 	.ds 7
      000027                        235 _WRITE_RTC_ADDR::
      000027                        236 	.ds 7
      00002E                        237 _TIME::
      00002E                        238 	.ds 7
      000035                        239 _Ds1302Write_PARM_2:
      000035                        240 	.ds 1
                                    241 ;--------------------------------------------------------
                                    242 ; overlayable items in internal ram 
                                    243 ;--------------------------------------------------------
                                    244 	.area	OSEG    (OVR,DATA)
                                    245 ;--------------------------------------------------------
                                    246 ; indirectly addressable internal ram data
                                    247 ;--------------------------------------------------------
                                    248 	.area ISEG    (DATA)
                                    249 ;--------------------------------------------------------
                                    250 ; absolute internal ram data
                                    251 ;--------------------------------------------------------
                                    252 	.area IABS    (ABS,DATA)
                                    253 	.area IABS    (ABS,DATA)
                                    254 ;--------------------------------------------------------
                                    255 ; bit data
                                    256 ;--------------------------------------------------------
                                    257 	.area BSEG    (BIT)
                                    258 ;--------------------------------------------------------
                                    259 ; paged external ram data
                                    260 ;--------------------------------------------------------
                                    261 	.area PSEG    (PAG,XDATA)
                                    262 ;--------------------------------------------------------
                                    263 ; external ram data
                                    264 ;--------------------------------------------------------
                                    265 	.area XSEG    (XDATA)
                                    266 ;--------------------------------------------------------
                                    267 ; absolute external ram data
                                    268 ;--------------------------------------------------------
                                    269 	.area XABS    (ABS,XDATA)
                                    270 ;--------------------------------------------------------
                                    271 ; external initialized ram data
                                    272 ;--------------------------------------------------------
                                    273 	.area XISEG   (XDATA)
                                    274 	.area HOME    (CODE)
                                    275 	.area GSINIT0 (CODE)
                                    276 	.area GSINIT1 (CODE)
                                    277 	.area GSINIT2 (CODE)
                                    278 	.area GSINIT3 (CODE)
                                    279 	.area GSINIT4 (CODE)
                                    280 	.area GSINIT5 (CODE)
                                    281 	.area GSINIT  (CODE)
                                    282 	.area GSFINAL (CODE)
                                    283 	.area CSEG    (CODE)
                                    284 ;--------------------------------------------------------
                                    285 ; global & static initialisations
                                    286 ;--------------------------------------------------------
                                    287 	.area HOME    (CODE)
                                    288 	.area GSINIT  (CODE)
                                    289 	.area GSFINAL (CODE)
                                    290 	.area GSINIT  (CODE)
                                    291 ;	ds1302.c:9: char READ_RTC_ADDR[7]={0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};
      0000A7 75 20 81         [24]  292 	mov	_READ_RTC_ADDR,#0x81
      0000AA 75 21 83         [24]  293 	mov	(_READ_RTC_ADDR + 0x0001),#0x83
      0000AD 75 22 85         [24]  294 	mov	(_READ_RTC_ADDR + 0x0002),#0x85
      0000B0 75 23 87         [24]  295 	mov	(_READ_RTC_ADDR + 0x0003),#0x87
      0000B3 75 24 89         [24]  296 	mov	(_READ_RTC_ADDR + 0x0004),#0x89
      0000B6 75 25 8B         [24]  297 	mov	(_READ_RTC_ADDR + 0x0005),#0x8b
      0000B9 75 26 8D         [24]  298 	mov	(_READ_RTC_ADDR + 0x0006),#0x8d
                                    299 ;	ds1302.c:10: char WRITE_RTC_ADDR[7]={0x80,0x82,0x84,0x86,0x88,0x8a,0x8c};
      0000BC 75 27 80         [24]  300 	mov	_WRITE_RTC_ADDR,#0x80
      0000BF 75 28 82         [24]  301 	mov	(_WRITE_RTC_ADDR + 0x0001),#0x82
      0000C2 75 29 84         [24]  302 	mov	(_WRITE_RTC_ADDR + 0x0002),#0x84
      0000C5 75 2A 86         [24]  303 	mov	(_WRITE_RTC_ADDR + 0x0003),#0x86
      0000C8 75 2B 88         [24]  304 	mov	(_WRITE_RTC_ADDR + 0x0004),#0x88
      0000CB 75 2C 8A         [24]  305 	mov	(_WRITE_RTC_ADDR + 0x0005),#0x8a
      0000CE 75 2D 8C         [24]  306 	mov	(_WRITE_RTC_ADDR + 0x0006),#0x8c
                                    307 ;	ds1302.c:12: uchar TIME[7]={0x55,0x15,0x12,0x07,0x05,0x06,0x16};
      0000D1 75 2E 55         [24]  308 	mov	_TIME,#0x55
      0000D4 75 2F 15         [24]  309 	mov	(_TIME + 0x0001),#0x15
      0000D7 75 30 12         [24]  310 	mov	(_TIME + 0x0002),#0x12
      0000DA 75 31 07         [24]  311 	mov	(_TIME + 0x0003),#0x07
      0000DD 75 32 05         [24]  312 	mov	(_TIME + 0x0004),#0x05
      0000E0 75 33 06         [24]  313 	mov	(_TIME + 0x0005),#0x06
      0000E3 75 34 16         [24]  314 	mov	(_TIME + 0x0006),#0x16
                                    315 ;--------------------------------------------------------
                                    316 ; Home
                                    317 ;--------------------------------------------------------
                                    318 	.area HOME    (CODE)
                                    319 	.area HOME    (CODE)
                                    320 ;--------------------------------------------------------
                                    321 ; code
                                    322 ;--------------------------------------------------------
                                    323 	.area CSEG    (CODE)
                                    324 ;------------------------------------------------------------
                                    325 ;Allocation info for local variables in function '_nop'
                                    326 ;------------------------------------------------------------
                                    327 ;	ds1302.c:4: void _nop()
                                    328 ;	-----------------------------------------
                                    329 ;	 function _nop
                                    330 ;	-----------------------------------------
      00024C                        331 __nop:
                           000007   332 	ar7 = 0x07
                           000006   333 	ar6 = 0x06
                           000005   334 	ar5 = 0x05
                           000004   335 	ar4 = 0x04
                           000003   336 	ar3 = 0x03
                           000002   337 	ar2 = 0x02
                           000001   338 	ar1 = 0x01
                           000000   339 	ar0 = 0x00
                                    340 ;	ds1302.c:6: }
      00024C 22               [24]  341 	ret
                                    342 ;------------------------------------------------------------
                                    343 ;Allocation info for local variables in function 'Ds1302GW'
                                    344 ;------------------------------------------------------------
                                    345 ;dat                       Allocated to registers r7 
                                    346 ;n                         Allocated to registers r6 
                                    347 ;------------------------------------------------------------
                                    348 ;	ds1302.c:14: void Ds1302GW(uchar dat) //general writing in the communication protocol
                                    349 ;	-----------------------------------------
                                    350 ;	 function Ds1302GW
                                    351 ;	-----------------------------------------
      00024D                        352 _Ds1302GW:
      00024D AF 82            [24]  353 	mov	r7,dpl
                                    354 ;	ds1302.c:17: for(n=0;n<8;n++)
      00024F 7E 00            [12]  355 	mov	r6,#0x00
      000251                        356 00102$:
                                    357 ;	ds1302.c:19: DSIO = dat&0x01; //lower bits first
      000251 EF               [12]  358 	mov	a,r7
      000252 54 01            [12]  359 	anl	a,#0x01
      000254 24 FF            [12]  360 	add	a,#0xff
      000256 92 B4            [24]  361 	mov	_P3_4,c
                                    362 ;	ds1302.c:20: SCLK = 1; //uprising edge transmit
                                    363 ;	assignBit
      000258 D2 B6            [12]  364 	setb	_P3_6
                                    365 ;	ds1302.c:21: SCLK = 0;
                                    366 ;	assignBit
      00025A C2 B6            [12]  367 	clr	_P3_6
                                    368 ;	ds1302.c:22: _nop();
      00025C C0 07            [24]  369 	push	ar7
      00025E C0 06            [24]  370 	push	ar6
      000260 12 02 4C         [24]  371 	lcall	__nop
      000263 D0 06            [24]  372 	pop	ar6
      000265 D0 07            [24]  373 	pop	ar7
                                    374 ;	ds1302.c:23: dat >>= 1;
      000267 EF               [12]  375 	mov	a,r7
      000268 C3               [12]  376 	clr	c
      000269 13               [12]  377 	rrc	a
      00026A FF               [12]  378 	mov	r7,a
                                    379 ;	ds1302.c:17: for(n=0;n<8;n++)
      00026B 0E               [12]  380 	inc	r6
      00026C BE 08 00         [24]  381 	cjne	r6,#0x08,00111$
      00026F                        382 00111$:
      00026F 40 E0            [24]  383 	jc	00102$
                                    384 ;	ds1302.c:25: }
      000271 22               [24]  385 	ret
                                    386 ;------------------------------------------------------------
                                    387 ;Allocation info for local variables in function 'Ds1302Write'
                                    388 ;------------------------------------------------------------
                                    389 ;dat                       Allocated with name '_Ds1302Write_PARM_2'
                                    390 ;addr                      Allocated to registers r7 
                                    391 ;------------------------------------------------------------
                                    392 ;	ds1302.c:26: void Ds1302Write(uchar addr, uchar dat)
                                    393 ;	-----------------------------------------
                                    394 ;	 function Ds1302Write
                                    395 ;	-----------------------------------------
      000272                        396 _Ds1302Write:
      000272 AF 82            [24]  397 	mov	r7,dpl
                                    398 ;	ds1302.c:28: RST = 0;
                                    399 ;	assignBit
      000274 C2 B7            [12]  400 	clr	_P3_7
                                    401 ;	ds1302.c:29: SCLK = 0;
                                    402 ;	assignBit
      000276 C2 B6            [12]  403 	clr	_P3_6
                                    404 ;	ds1302.c:30: _nop();
      000278 C0 07            [24]  405 	push	ar7
      00027A 12 02 4C         [24]  406 	lcall	__nop
      00027D D0 07            [24]  407 	pop	ar7
                                    408 ;	ds1302.c:31: RST = 1; //enable reset
                                    409 ;	assignBit
      00027F D2 B7            [12]  410 	setb	_P3_7
                                    411 ;	ds1302.c:32: Ds1302GW(addr);
      000281 8F 82            [24]  412 	mov	dpl,r7
      000283 12 02 4D         [24]  413 	lcall	_Ds1302GW
                                    414 ;	ds1302.c:33: Ds1302GW(dat);
      000286 85 35 82         [24]  415 	mov	dpl,_Ds1302Write_PARM_2
      000289 12 02 4D         [24]  416 	lcall	_Ds1302GW
                                    417 ;	ds1302.c:34: RST = 0;
                                    418 ;	assignBit
      00028C C2 B7            [12]  419 	clr	_P3_7
                                    420 ;	ds1302.c:35: _nop();
      00028E 12 02 4C         [24]  421 	lcall	__nop
                                    422 ;	ds1302.c:36: SCLK = 1;
                                    423 ;	assignBit
      000291 D2 B6            [12]  424 	setb	_P3_6
                                    425 ;	ds1302.c:37: }
      000293 22               [24]  426 	ret
                                    427 ;------------------------------------------------------------
                                    428 ;Allocation info for local variables in function 'Ds1302Init'
                                    429 ;------------------------------------------------------------
                                    430 ;n                         Allocated to registers r7 
                                    431 ;------------------------------------------------------------
                                    432 ;	ds1302.c:39: void Ds1302Init()
                                    433 ;	-----------------------------------------
                                    434 ;	 function Ds1302Init
                                    435 ;	-----------------------------------------
      000294                        436 _Ds1302Init:
                                    437 ;	ds1302.c:42: Ds1302Write(0x80,0x00);
      000294 75 35 00         [24]  438 	mov	_Ds1302Write_PARM_2,#0x00
      000297 75 82 80         [24]  439 	mov	dpl,#0x80
      00029A 12 02 72         [24]  440 	lcall	_Ds1302Write
                                    441 ;	ds1302.c:43: Ds1302Write(0x8e,0x00);
      00029D 75 35 00         [24]  442 	mov	_Ds1302Write_PARM_2,#0x00
      0002A0 75 82 8E         [24]  443 	mov	dpl,#0x8e
      0002A3 12 02 72         [24]  444 	lcall	_Ds1302Write
                                    445 ;	ds1302.c:44: Ds1302Write(0x80,0x80);
      0002A6 75 35 80         [24]  446 	mov	_Ds1302Write_PARM_2,#0x80
      0002A9 75 82 80         [24]  447 	mov	dpl,#0x80
      0002AC 12 02 72         [24]  448 	lcall	_Ds1302Write
                                    449 ;	ds1302.c:45: for(n=0;n<7;n++)
      0002AF 7F 00            [12]  450 	mov	r7,#0x00
      0002B1                        451 00102$:
                                    452 ;	ds1302.c:47: Ds1302Write(WRITE_RTC_ADDR[n],TIME[n]);
      0002B1 EF               [12]  453 	mov	a,r7
      0002B2 24 27            [12]  454 	add	a,#_WRITE_RTC_ADDR
      0002B4 F9               [12]  455 	mov	r1,a
      0002B5 87 82            [24]  456 	mov	dpl,@r1
      0002B7 EF               [12]  457 	mov	a,r7
      0002B8 24 2E            [12]  458 	add	a,#_TIME
      0002BA F9               [12]  459 	mov	r1,a
      0002BB 87 35            [24]  460 	mov	_Ds1302Write_PARM_2,@r1
      0002BD C0 07            [24]  461 	push	ar7
      0002BF 12 02 72         [24]  462 	lcall	_Ds1302Write
      0002C2 D0 07            [24]  463 	pop	ar7
                                    464 ;	ds1302.c:45: for(n=0;n<7;n++)
      0002C4 0F               [12]  465 	inc	r7
      0002C5 BF 07 00         [24]  466 	cjne	r7,#0x07,00115$
      0002C8                        467 00115$:
      0002C8 40 E7            [24]  468 	jc	00102$
                                    469 ;	ds1302.c:49: Ds1302Write(0x8e,0x80);
      0002CA 75 35 80         [24]  470 	mov	_Ds1302Write_PARM_2,#0x80
      0002CD 75 82 8E         [24]  471 	mov	dpl,#0x8e
                                    472 ;	ds1302.c:50: }
      0002D0 02 02 72         [24]  473 	ljmp	_Ds1302Write
                                    474 ;------------------------------------------------------------
                                    475 ;Allocation info for local variables in function 'Ds1302GR'
                                    476 ;------------------------------------------------------------
                                    477 ;n                         Allocated to registers r6 
                                    478 ;temp                      Allocated to registers r5 
                                    479 ;------------------------------------------------------------
                                    480 ;	ds1302.c:52: uchar Ds1302GR()
                                    481 ;	-----------------------------------------
                                    482 ;	 function Ds1302GR
                                    483 ;	-----------------------------------------
      0002D3                        484 _Ds1302GR:
                                    485 ;	ds1302.c:54: uchar n,temp=0x00;
      0002D3 7F 00            [12]  486 	mov	r7,#0x00
                                    487 ;	ds1302.c:55: for(n=0;n<8;n++)
      0002D5 7E 00            [12]  488 	mov	r6,#0x00
      0002D7                        489 00105$:
                                    490 ;	ds1302.c:57: temp >>= 1;
      0002D7 EF               [12]  491 	mov	a,r7
      0002D8 C3               [12]  492 	clr	c
      0002D9 13               [12]  493 	rrc	a
      0002DA FD               [12]  494 	mov	r5,a
                                    495 ;	ds1302.c:58: if(DSIO==1)
      0002DB 30 B4 09         [24]  496 	jnb	_P3_4,00102$
                                    497 ;	ds1302.c:60: temp |= 0x80;
      0002DE 8D 03            [24]  498 	mov	ar3,r5
      0002E0 43 03 80         [24]  499 	orl	ar3,#0x80
      0002E3 8B 07            [24]  500 	mov	ar7,r3
      0002E5 80 04            [24]  501 	sjmp	00103$
      0002E7                        502 00102$:
                                    503 ;	ds1302.c:64: temp &= 0x7f;
      0002E7 74 7F            [12]  504 	mov	a,#0x7f
      0002E9 5D               [12]  505 	anl	a,r5
      0002EA FF               [12]  506 	mov	r7,a
      0002EB                        507 00103$:
                                    508 ;	ds1302.c:66: SCLK = 1;
                                    509 ;	assignBit
      0002EB D2 B6            [12]  510 	setb	_P3_6
                                    511 ;	ds1302.c:67: SCLK = 0;
                                    512 ;	assignBit
      0002ED C2 B6            [12]  513 	clr	_P3_6
                                    514 ;	ds1302.c:55: for(n=0;n<8;n++)
      0002EF 0E               [12]  515 	inc	r6
      0002F0 BE 08 00         [24]  516 	cjne	r6,#0x08,00126$
      0002F3                        517 00126$:
      0002F3 40 E2            [24]  518 	jc	00105$
                                    519 ;	ds1302.c:69: return temp;
      0002F5 8F 82            [24]  520 	mov	dpl,r7
                                    521 ;	ds1302.c:70: }
      0002F7 22               [24]  522 	ret
                                    523 ;------------------------------------------------------------
                                    524 ;Allocation info for local variables in function 'Ds1302Read'
                                    525 ;------------------------------------------------------------
                                    526 ;addr                      Allocated to registers 
                                    527 ;dat                       Allocated to registers r7 
                                    528 ;------------------------------------------------------------
                                    529 ;	ds1302.c:71: uchar Ds1302Read(uchar addr)
                                    530 ;	-----------------------------------------
                                    531 ;	 function Ds1302Read
                                    532 ;	-----------------------------------------
      0002F8                        533 _Ds1302Read:
      0002F8 AF 82            [24]  534 	mov	r7,dpl
                                    535 ;	ds1302.c:74: RST = 1;
                                    536 ;	assignBit
      0002FA D2 B7            [12]  537 	setb	_P3_7
                                    538 ;	ds1302.c:75: _nop();
      0002FC C0 07            [24]  539 	push	ar7
      0002FE 12 02 4C         [24]  540 	lcall	__nop
      000301 D0 07            [24]  541 	pop	ar7
                                    542 ;	ds1302.c:76: addr |= 0x01;
      000303 43 07 01         [24]  543 	orl	ar7,#0x01
      000306 8F 82            [24]  544 	mov	dpl,r7
                                    545 ;	ds1302.c:77: Ds1302GW(addr);
      000308 12 02 4D         [24]  546 	lcall	_Ds1302GW
                                    547 ;	ds1302.c:78: dat=Ds1302GR();
      00030B 12 02 D3         [24]  548 	lcall	_Ds1302GR
      00030E AF 82            [24]  549 	mov	r7,dpl
                                    550 ;	ds1302.c:82: RST = 0; //make Ds1302 have time to get stable
                                    551 ;	assignBit
      000310 C2 B7            [12]  552 	clr	_P3_7
                                    553 ;	ds1302.c:83: _nop();
      000312 C0 07            [24]  554 	push	ar7
      000314 12 02 4C         [24]  555 	lcall	__nop
                                    556 ;	ds1302.c:84: SCLK = 1;
                                    557 ;	assignBit
      000317 D2 B6            [12]  558 	setb	_P3_6
                                    559 ;	ds1302.c:85: _nop();
      000319 12 02 4C         [24]  560 	lcall	__nop
                                    561 ;	ds1302.c:86: DSIO = 0;
                                    562 ;	assignBit
      00031C C2 B4            [12]  563 	clr	_P3_4
                                    564 ;	ds1302.c:87: _nop();
      00031E 12 02 4C         [24]  565 	lcall	__nop
                                    566 ;	ds1302.c:88: DSIO = 1;
                                    567 ;	assignBit
      000321 D2 B4            [12]  568 	setb	_P3_4
                                    569 ;	ds1302.c:89: _nop();
      000323 12 02 4C         [24]  570 	lcall	__nop
      000326 D0 07            [24]  571 	pop	ar7
                                    572 ;	ds1302.c:90: return dat;
      000328 8F 82            [24]  573 	mov	dpl,r7
                                    574 ;	ds1302.c:91: }
      00032A 22               [24]  575 	ret
                                    576 ;------------------------------------------------------------
                                    577 ;Allocation info for local variables in function 'Ds1302ReadTime'
                                    578 ;------------------------------------------------------------
                                    579 ;n                         Allocated to registers r7 
                                    580 ;------------------------------------------------------------
                                    581 ;	ds1302.c:93: void Ds1302ReadTime()
                                    582 ;	-----------------------------------------
                                    583 ;	 function Ds1302ReadTime
                                    584 ;	-----------------------------------------
      00032B                        585 _Ds1302ReadTime:
                                    586 ;	ds1302.c:96: for(n=0;n<7;n++)
      00032B 7F 00            [12]  587 	mov	r7,#0x00
      00032D                        588 00102$:
                                    589 ;	ds1302.c:98: TIME[n] = Ds1302Read(READ_RTC_ADDR[n]);
      00032D EF               [12]  590 	mov	a,r7
      00032E 24 2E            [12]  591 	add	a,#_TIME
      000330 F9               [12]  592 	mov	r1,a
      000331 EF               [12]  593 	mov	a,r7
      000332 24 20            [12]  594 	add	a,#_READ_RTC_ADDR
      000334 F8               [12]  595 	mov	r0,a
      000335 86 82            [24]  596 	mov	dpl,@r0
      000337 C0 07            [24]  597 	push	ar7
      000339 C0 01            [24]  598 	push	ar1
      00033B 12 02 F8         [24]  599 	lcall	_Ds1302Read
      00033E E5 82            [12]  600 	mov	a,dpl
      000340 D0 01            [24]  601 	pop	ar1
      000342 D0 07            [24]  602 	pop	ar7
      000344 F7               [12]  603 	mov	@r1,a
                                    604 ;	ds1302.c:96: for(n=0;n<7;n++)
      000345 0F               [12]  605 	inc	r7
      000346 BF 07 00         [24]  606 	cjne	r7,#0x07,00111$
      000349                        607 00111$:
      000349 40 E2            [24]  608 	jc	00102$
                                    609 ;	ds1302.c:100: }
      00034B 22               [24]  610 	ret
                                    611 	.area CSEG    (CODE)
                                    612 	.area CONST   (CODE)
                                    613 	.area XINIT   (CODE)
                                    614 	.area CABS    (ABS,CODE)
